create a 3d helpers module that has:
    angular distance between two eulers
    generating SO(3)

project structure:
    maybe change core.rendition_statistics to just rendition
    perhaps then all rendition generation happens by creating novel toys which have orientations and view renderers and then have renditions

questions for linda or else:
    when generating the null dataset should I match number of views to the number of samples in our experimental data for more normalized comparison?
    or should I just divide by number of views for a norm on each component?
    
    how should rendering be done? do edges matter that are on the interior of the object? should we use the matlab builtin or go with a more complex convolutional method?

    generate a "table" distrobution that takes gravity into account to compare the experimental and null distrobution to

    when computing hull should I compute euler number? should I check number of convex hulls?
        when computing longest edge is my method ok?
        when computing area presented is my method ok? should I take area as a proportion of total screen space?